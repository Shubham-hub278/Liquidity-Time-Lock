{
  "contractName": "MindApp",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mindToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investorinfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "depositedby",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balances",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deposited_at",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releasetime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mindToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenbalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenprice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_stakeAddress",
          "type": "address"
        }
      ],
      "name": "setstakeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_liquidityAddress",
          "type": "address"
        }
      ],
      "name": "setliquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenprice",
          "type": "uint256"
        }
      ],
      "name": "settokencost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mindToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cancelInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorinfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"depositedby\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balances\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deposited_at\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasetime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mindToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_liquidityAddress\",\"type\":\"address\"}],\"name\":\"setliquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_stakeAddress\",\"type\":\"address\"}],\"name\":\"setstakeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenprice\",\"type\":\"uint256\"}],\"name\":\"settokencost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenbalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenprice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Investment.sol\":\"MindApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4082ea29d4cab3998038c2c5e37ed990e009a6d8814bbe82931173db7b6e63d5\",\"dweb:/ipfs/QmaAwSn8ubftkwEYP3iU14f8VP7texzjWDXbopEEvm8LQF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/IToken.sol\":{\"keccak256\":\"0x7dc7355c5d811efb6f7b9c541db7b768d9da916a966bce15c11aab13feaae87a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f3796dccaa7acbb311738a596012a5c3dc4ed1079d1f9a39de2fb3a77869ea1\",\"dweb:/ipfs/QmXvcpzyvBj9nmPpJRdp7mXuHkyCCwnifAFwkqzAumrb6e\"]},\"project:/contracts/Investment.sol\":{\"keccak256\":\"0x38554e6e3a12f757a86ceb876c6d7f64385ad69da9430e8fa87fccad22734792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bcb8c6f8a82922a5d24533f1bb08cd7582bf2c07f7afb4a29f944265105ee88\",\"dweb:/ipfs/Qmb5AtksyJro7hXJcChWHDfUDU3qWFinJ1zt4YPLmJGD9m\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c7838038062001c788339818101604052810190620000379190620000d6565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600081519050620000d08162000141565b92915050565b600060208284031215620000ef57620000ee6200013c565b5b6000620000ff84828501620000bf565b91505092915050565b600062000115826200011c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014c8162000108565b81146200015857600080fd5b50565b611b0d806200016b6000396000f3fe6080604052600436106100c25760003560e01c806394f8e9541161007f578063d0bd4c7311610059578063d0bd4c7314610230578063d0e30db01461025b578063d867468814610265578063f71af22b146102a5576100c2565b806394f8e954146101c5578063bdfecc78146101dc578063d01cc48b14610205576100c2565b80630ab1e603146100c757806328739c1e146100de5780633221c93f146101075780636bb9e88714610132578063851073671461016f5780638da5cb5b1461019a575b600080fd5b3480156100d357600080fd5b506100dc6102ce565b005b3480156100ea57600080fd5b50610105600480360381019061010091906113ab565b6106a5565b005b34801561011357600080fd5b5061011c610707565b6040516101299190611524565b60405180910390f35b34801561013e57600080fd5b5061015960048036038101906101549190611324565b61072d565b60405161016691906116b6565b60405180910390f35b34801561017b57600080fd5b50610184610745565b6040516101919190611524565b60405180910390f35b3480156101a657600080fd5b506101af61076b565b6040516101bc9190611509565b60405180910390f35b3480156101d157600080fd5b506101da61078f565b005b3480156101e857600080fd5b5061020360048036038101906101fe9190611351565b610ba5565b005b34801561021157600080fd5b5061021a610c41565b6040516102279190611509565b60405180910390f35b34801561023c57600080fd5b50610245610c67565b60405161025291906116b6565b60405180910390f35b610263610c6d565b005b34801561027157600080fd5b5061028c60048036038101906102879190611324565b610d75565b60405161029c9493929190611591565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611351565b610dc5565b005b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154421015610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90611636565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90611696565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161045a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610451906115d6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f19350505050158015610504573d6000803e3d6000fd5b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016105c392919061153f565b602060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610615919061137e565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b8060048190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154421015610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b906115f6565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611656565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290611676565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050501580156109a8573d6000803e3d6000fd5b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac30836040518363ffffffff1660e01b8152600401610ada929190611568565b600060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b50505050610b5e81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6190919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfd57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000349050600033905060008211610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb190611616565b60405180910390fd5b6000610ce36064610cd5605a86610e7790919063ffffffff16565b610e8d90919063ffffffff16565b9050610cef8183610ea3565b6000610d048285610e6190919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d6e573d6000803e3d6000fd5b5050505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183610e6f91906117c3565b905092915050565b60008183610e859190611769565b905092915050565b60008183610e9b9190611738565b905092915050565b610ef882600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546111d290919063ffffffff16565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550610384600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461105691906116e2565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060006110a7836111e8565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401611106929190611568565b600060405180830381600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b5050505061118a81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d290919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081836111e091906116e2565b905092915050565b60008061121a670de0b6b3a764000061120c60045486610e7790919063ffffffff16565b610e8d90919063ffffffff16565b90506000670de0b6b3a76400008411801561123c5750674563918244f4000084105b1561127d57611268606461125a600a85610e7790919063ffffffff16565b610e8d90919063ffffffff16565b9050808261127691906116e2565b91506112c6565b674563918244f400008411156112c5576112b460646112a6601485610e7790919063ffffffff16565b610e8d90919063ffffffff16565b905080826112c291906116e2565b91505b5b8192505050919050565b6000813590506112df81611a7b565b92915050565b6000813590506112f481611a92565b92915050565b60008151905061130981611aa9565b92915050565b60008135905061131e81611ac0565b92915050565b60006020828403121561133a576113396118e5565b5b6000611348848285016112d0565b91505092915050565b600060208284031215611367576113666118e5565b5b6000611375848285016112e5565b91505092915050565b600060208284031215611394576113936118e5565b5b60006113a2848285016112fa565b91505092915050565b6000602082840312156113c1576113c06118e5565b5b60006113cf8482850161130f565b91505092915050565b6113e181611851565b82525050565b6113f081611809565b82525050565b6113ff816117f7565b82525050565b60006114126038836116d1565b915061141d826118ea565b604082019050919050565b6000611435602d836116d1565b915061144082611939565b604082019050919050565b6000611458601f836116d1565b915061146382611988565b602082019050919050565b600061147b6020836116d1565b9150611486826119b1565b602082019050919050565b600061149e6021836116d1565b91506114a9826119da565b604082019050919050565b60006114c1601e836116d1565b91506114cc82611a29565b602082019050919050565b60006114e4601e836116d1565b91506114ef82611a52565b602082019050919050565b61150381611847565b82525050565b600060208201905061151e60008301846113f6565b92915050565b600060208201905061153960008301846113e7565b92915050565b600060408201905061155460008301856113d8565b61156160208301846114fa565b9392505050565b600060408201905061157d60008301856113f6565b61158a60208301846114fa565b9392505050565b60006080820190506115a660008301876113f6565b6115b360208301866114fa565b6115c060408301856114fa565b6115cd60608301846114fa565b95945050505050565b600060208201905081810360008301526115ef81611405565b9050919050565b6000602082019050818103600083015261160f81611428565b9050919050565b6000602082019050818103600083015261162f8161144b565b9050919050565b6000602082019050818103600083015261164f8161146e565b9050919050565b6000602082019050818103600083015261166f81611491565b9050919050565b6000602082019050818103600083015261168f816114b4565b9050919050565b600060208201905081810360008301526116af816114d7565b9050919050565b60006020820190506116cb60008301846114fa565b92915050565b600082825260208201905092915050565b60006116ed82611847565b91506116f883611847565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561172d5761172c611887565b5b828201905092915050565b600061174382611847565b915061174e83611847565b92508261175e5761175d6118b6565b5b828204905092915050565b600061177482611847565b915061177f83611847565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117b8576117b7611887565b5b828202905092915050565b60006117ce82611847565b91506117d983611847565b9250828210156117ec576117eb611887565b5b828203905092915050565b600061180282611827565b9050919050565b600061181482611827565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061185c82611863565b9050919050565b600061186e82611875565b9050919050565b600061188082611827565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4e6f20696e766573746d656e742068617320646f6e65206561726c6965722c2060008201527f5374616b696e67206973206e6f74207065726d69747465640000000000000000602082015250565b7f46756e64732063616e206e6f742062652072656c6561736564206265666f726560008201527f206c6f636b2d696e2074696d6500000000000000000000000000000000000000602082015250565b7f46756e64732063616e206e6f74206265206c657373207468616e207a65726f00600082015250565b7f4c6f636b2d696e20706572696f6420686173206e6f7420656e64656420796574600082015250565b7f5468657265206973206e6f20657468657220746f20626520776974686472617760008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f20696e766573746d656e742068617320646f6e65206561726c6965720000600082015250565b7f5468657265206973206e6f20657468657220746f206265207374616b65640000600082015250565b611a84816117f7565b8114611a8f57600080fd5b50565b611a9b81611809565b8114611aa657600080fd5b50565b611ab28161181b565b8114611abd57600080fd5b50565b611ac981611847565b8114611ad457600080fd5b5056fea26469706673582212205b8f270d96352f39bfe0123aeffb64e66a3ef2eb90f5a0ffaff28a04c6fcc90364736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c806394f8e9541161007f578063d0bd4c7311610059578063d0bd4c7314610230578063d0e30db01461025b578063d867468814610265578063f71af22b146102a5576100c2565b806394f8e954146101c5578063bdfecc78146101dc578063d01cc48b14610205576100c2565b80630ab1e603146100c757806328739c1e146100de5780633221c93f146101075780636bb9e88714610132578063851073671461016f5780638da5cb5b1461019a575b600080fd5b3480156100d357600080fd5b506100dc6102ce565b005b3480156100ea57600080fd5b50610105600480360381019061010091906113ab565b6106a5565b005b34801561011357600080fd5b5061011c610707565b6040516101299190611524565b60405180910390f35b34801561013e57600080fd5b5061015960048036038101906101549190611324565b61072d565b60405161016691906116b6565b60405180910390f35b34801561017b57600080fd5b50610184610745565b6040516101919190611524565b60405180910390f35b3480156101a657600080fd5b506101af61076b565b6040516101bc9190611509565b60405180910390f35b3480156101d157600080fd5b506101da61078f565b005b3480156101e857600080fd5b5061020360048036038101906101fe9190611351565b610ba5565b005b34801561021157600080fd5b5061021a610c41565b6040516102279190611509565b60405180910390f35b34801561023c57600080fd5b50610245610c67565b60405161025291906116b6565b60405180910390f35b610263610c6d565b005b34801561027157600080fd5b5061028c60048036038101906102879190611324565b610d75565b60405161029c9493929190611591565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611351565b610dc5565b005b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154421015610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90611636565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90611696565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161045a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610451906115d6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f19350505050158015610504573d6000803e3d6000fd5b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016105c392919061153f565b602060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610615919061137e565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b8060048190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154421015610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b906115f6565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611656565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290611676565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050501580156109a8573d6000803e3d6000fd5b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac30836040518363ffffffff1660e01b8152600401610ada929190611568565b600060405180830381600087803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b50505050610b5e81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6190919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfd57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000349050600033905060008211610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb190611616565b60405180910390fd5b6000610ce36064610cd5605a86610e7790919063ffffffff16565b610e8d90919063ffffffff16565b9050610cef8183610ea3565b6000610d048285610e6190919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d6e573d6000803e3d6000fd5b5050505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183610e6f91906117c3565b905092915050565b60008183610e859190611769565b905092915050565b60008183610e9b9190611738565b905092915050565b610ef882600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546111d290919063ffffffff16565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550610384600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461105691906116e2565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060006110a7836111e8565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401611106929190611568565b600060405180830381600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b5050505061118a81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d290919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081836111e091906116e2565b905092915050565b60008061121a670de0b6b3a764000061120c60045486610e7790919063ffffffff16565b610e8d90919063ffffffff16565b90506000670de0b6b3a76400008411801561123c5750674563918244f4000084105b1561127d57611268606461125a600a85610e7790919063ffffffff16565b610e8d90919063ffffffff16565b9050808261127691906116e2565b91506112c6565b674563918244f400008411156112c5576112b460646112a6601485610e7790919063ffffffff16565b610e8d90919063ffffffff16565b905080826112c291906116e2565b91505b5b8192505050919050565b6000813590506112df81611a7b565b92915050565b6000813590506112f481611a92565b92915050565b60008151905061130981611aa9565b92915050565b60008135905061131e81611ac0565b92915050565b60006020828403121561133a576113396118e5565b5b6000611348848285016112d0565b91505092915050565b600060208284031215611367576113666118e5565b5b6000611375848285016112e5565b91505092915050565b600060208284031215611394576113936118e5565b5b60006113a2848285016112fa565b91505092915050565b6000602082840312156113c1576113c06118e5565b5b60006113cf8482850161130f565b91505092915050565b6113e181611851565b82525050565b6113f081611809565b82525050565b6113ff816117f7565b82525050565b60006114126038836116d1565b915061141d826118ea565b604082019050919050565b6000611435602d836116d1565b915061144082611939565b604082019050919050565b6000611458601f836116d1565b915061146382611988565b602082019050919050565b600061147b6020836116d1565b9150611486826119b1565b602082019050919050565b600061149e6021836116d1565b91506114a9826119da565b604082019050919050565b60006114c1601e836116d1565b91506114cc82611a29565b602082019050919050565b60006114e4601e836116d1565b91506114ef82611a52565b602082019050919050565b61150381611847565b82525050565b600060208201905061151e60008301846113f6565b92915050565b600060208201905061153960008301846113e7565b92915050565b600060408201905061155460008301856113d8565b61156160208301846114fa565b9392505050565b600060408201905061157d60008301856113f6565b61158a60208301846114fa565b9392505050565b60006080820190506115a660008301876113f6565b6115b360208301866114fa565b6115c060408301856114fa565b6115cd60608301846114fa565b95945050505050565b600060208201905081810360008301526115ef81611405565b9050919050565b6000602082019050818103600083015261160f81611428565b9050919050565b6000602082019050818103600083015261162f8161144b565b9050919050565b6000602082019050818103600083015261164f8161146e565b9050919050565b6000602082019050818103600083015261166f81611491565b9050919050565b6000602082019050818103600083015261168f816114b4565b9050919050565b600060208201905081810360008301526116af816114d7565b9050919050565b60006020820190506116cb60008301846114fa565b92915050565b600082825260208201905092915050565b60006116ed82611847565b91506116f883611847565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561172d5761172c611887565b5b828201905092915050565b600061174382611847565b915061174e83611847565b92508261175e5761175d6118b6565b5b828204905092915050565b600061177482611847565b915061177f83611847565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117b8576117b7611887565b5b828202905092915050565b60006117ce82611847565b91506117d983611847565b9250828210156117ec576117eb611887565b5b828203905092915050565b600061180282611827565b9050919050565b600061181482611827565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061185c82611863565b9050919050565b600061186e82611875565b9050919050565b600061188082611827565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4e6f20696e766573746d656e742068617320646f6e65206561726c6965722c2060008201527f5374616b696e67206973206e6f74207065726d69747465640000000000000000602082015250565b7f46756e64732063616e206e6f742062652072656c6561736564206265666f726560008201527f206c6f636b2d696e2074696d6500000000000000000000000000000000000000602082015250565b7f46756e64732063616e206e6f74206265206c657373207468616e207a65726f00600082015250565b7f4c6f636b2d696e20706572696f6420686173206e6f7420656e64656420796574600082015250565b7f5468657265206973206e6f20657468657220746f20626520776974686472617760008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f20696e766573746d656e742068617320646f6e65206561726c6965720000600082015250565b7f5468657265206973206e6f20657468657220746f206265207374616b65640000600082015250565b611a84816117f7565b8114611a8f57600080fd5b50565b611a9b81611809565b8114611aa657600080fd5b50565b611ab28161181b565b8114611abd57600080fd5b50565b611ac981611847565b8114611ad457600080fd5b5056fea26469706673582212205b8f270d96352f39bfe0123aeffb64e66a3ef2eb90f5a0ffaff28a04c6fcc90364736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:8",
                "type": ""
              }
            ],
            "src": "7:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:8",
                "type": ""
              }
            ],
            "src": "156:351:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:8",
                "type": ""
              }
            ],
            "src": "513:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:8",
                "type": ""
              }
            ],
            "src": "594:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:8",
                "type": ""
              }
            ],
            "src": "696:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:8",
                "type": ""
              }
            ],
            "src": "1074:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14888:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:8"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:8",
                "type": ""
              }
            ],
            "src": "152:155:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "373:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "383:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "398:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "392:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "383:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "438:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "414:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "414:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "351:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "359:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "367:5:8",
                "type": ""
              }
            ],
            "src": "313:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "583:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "556:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:8",
                "type": ""
              }
            ],
            "src": "456:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "715:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "715:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "715:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "688:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "709:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "677:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "806:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "821:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "835:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "825:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "850:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "885:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "896:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "881:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "881:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "905:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "860:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "850:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "637:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "648:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "660:6:8",
                "type": ""
              }
            ],
            "src": "601:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1010:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1056:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1058:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1058:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1058:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1031:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1040:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1027:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1027:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1052:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1023:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1023:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1020:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1149:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1164:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1168:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1193:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1236:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1247:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1232:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1232:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1256:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1203:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1193:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "980:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "991:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1003:6:8",
                "type": ""
              }
            ],
            "src": "936:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1361:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1407:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1409:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1409:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1409:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1382:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1391:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1378:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1378:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1374:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1371:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1500:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1515:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1529:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1519:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1544:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1587:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1598:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1583:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1583:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1607:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1554:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1544:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1331:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1342:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1354:6:8",
                "type": ""
              }
            ],
            "src": "1287:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1704:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1750:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1752:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1752:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1752:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1725:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1746:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1717:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1714:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1843:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1858:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1862:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1887:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1922:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1933:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1918:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1918:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1942:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1897:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1897:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1887:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1674:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1685:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1697:6:8",
                "type": ""
              }
            ],
            "src": "1638:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2046:74:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2063:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2107:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2068:38:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2068:45:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2056:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2056:58:8"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2034:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2041:3:8",
                "type": ""
              }
            ],
            "src": "1973:147:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2207:61:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2224:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2255:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2229:25:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2229:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:45:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:45:8"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2195:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2202:3:8",
                "type": ""
              }
            ],
            "src": "2126:142:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2339:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2356:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2379:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2361:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2361:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2349:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2349:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2349:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2327:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2334:3:8",
                "type": ""
              }
            ],
            "src": "2274:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2544:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2554:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2620:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:2:8",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2561:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2554:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2726:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
                      "nodeType": "YulIdentifier",
                      "src": "2637:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2637:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2739:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2750:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2755:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2746:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2739:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2532:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2540:3:8",
                "type": ""
              }
            ],
            "src": "2398:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2916:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2926:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2992:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2997:2:8",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2933:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2926:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3098:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
                      "nodeType": "YulIdentifier",
                      "src": "3009:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3111:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3122:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3127:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3118:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3111:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2904:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2912:3:8",
                "type": ""
              }
            ],
            "src": "2770:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3288:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3298:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3364:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3369:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3305:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3298:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3470:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
                      "nodeType": "YulIdentifier",
                      "src": "3381:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3381:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3381:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3494:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3499:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3490:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3483:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3276:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3284:3:8",
                "type": ""
              }
            ],
            "src": "3142:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3670:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3736:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3741:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3677:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3677:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3670:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3842:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
                      "nodeType": "YulIdentifier",
                      "src": "3753:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3753:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3753:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3855:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3866:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3871:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3862:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3855:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3648:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3656:3:8",
                "type": ""
              }
            ],
            "src": "3514:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4032:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4042:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4108:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4113:2:8",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4049:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4049:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4042:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4214:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
                      "nodeType": "YulIdentifier",
                      "src": "4125:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4125:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4125:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4227:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4238:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4243:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4234:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4227:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4020:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4028:3:8",
                "type": ""
              }
            ],
            "src": "3886:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4404:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4414:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4480:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4485:2:8",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4421:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4421:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4414:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4586:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
                      "nodeType": "YulIdentifier",
                      "src": "4497:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4497:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4599:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4610:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4615:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4606:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4606:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4599:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4392:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4400:3:8",
                "type": ""
              }
            ],
            "src": "4258:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4776:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4786:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4852:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4857:2:8",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4793:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4786:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4958:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
                      "nodeType": "YulIdentifier",
                      "src": "4869:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4869:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4869:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4971:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4982:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4987:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4978:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4978:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4971:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4764:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4772:3:8",
                "type": ""
              }
            ],
            "src": "4630:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5067:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5084:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5107:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5089:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5089:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5077:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5077:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5077:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5055:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5062:3:8",
                "type": ""
              }
            ],
            "src": "5002:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5224:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5234:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5246:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5257:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5242:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5242:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5234:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5314:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5327:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5338:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5323:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5323:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5270:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5270:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5196:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5208:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5219:4:8",
                "type": ""
              }
            ],
            "src": "5126:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5468:140:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5478:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5490:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5501:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5486:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5486:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5478:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5574:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5587:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5598:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5583:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5583:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5514:59:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:87:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5514:87:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5440:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5452:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5463:4:8",
                "type": ""
              }
            ],
            "src": "5354:254:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5748:214:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5758:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5770:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5766:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5766:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5758:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5846:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5859:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5870:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5855:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5855:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5794:51:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:79:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5794:79:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5927:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5940:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5951:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5936:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5936:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5883:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5883:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5883:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5712:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5724:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5732:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5743:4:8",
                "type": ""
              }
            ],
            "src": "5614:348:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6094:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6104:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6116:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6127:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6112:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6112:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6104:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6184:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6197:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6208:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6193:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6193:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6140:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6140:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6140:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6265:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6278:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6289:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6274:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6274:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6221:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6221:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6221:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6058:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6070:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6078:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6089:4:8",
                "type": ""
              }
            ],
            "src": "5968:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6488:371:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6498:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6510:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6521:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6506:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6506:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6498:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6579:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6592:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6603:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6588:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6588:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6535:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6535:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6660:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6673:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6684:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6669:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6669:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6616:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6616:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6616:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6742:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6755:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6766:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6751:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6751:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6698:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6698:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6698:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6824:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6837:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6848:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6833:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6833:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6780:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6780:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6780:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6436:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6448:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6456:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6464:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6472:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6483:4:8",
                "type": ""
              }
            ],
            "src": "6306:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7036:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7046:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7058:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7069:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7054:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7054:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7046:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7093:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7104:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7089:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7089:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7112:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7118:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7108:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7108:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7082:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7082:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7082:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7138:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7272:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7146:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7146:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7138:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7016:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7031:4:8",
                "type": ""
              }
            ],
            "src": "6865:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7461:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7471:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7483:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7494:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7479:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7479:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7471:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7518:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7529:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7514:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7514:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7537:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7543:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7533:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7533:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7507:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7507:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7507:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7563:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7697:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7571:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7571:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7563:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7441:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7456:4:8",
                "type": ""
              }
            ],
            "src": "7290:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7886:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7896:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7908:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7919:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7904:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7904:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7896:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7943:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7954:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7939:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7939:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7962:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7968:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7958:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7958:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7932:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7932:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7932:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7988:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8122:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7996:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7996:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7988:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7866:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7881:4:8",
                "type": ""
              }
            ],
            "src": "7715:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8311:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8321:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8333:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8344:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8329:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8329:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8321:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8368:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8379:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8364:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8364:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8387:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8393:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8357:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8357:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8357:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8413:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8547:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8421:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8421:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8413:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8291:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8306:4:8",
                "type": ""
              }
            ],
            "src": "8140:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8736:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8746:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8758:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8769:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8754:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8754:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8746:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8793:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8804:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8789:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8789:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8812:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8818:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8808:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8782:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8782:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8782:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8838:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8972:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8846:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8846:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8838:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8716:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8731:4:8",
                "type": ""
              }
            ],
            "src": "8565:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9161:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9171:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9183:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9194:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9179:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9179:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9171:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9218:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9229:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9214:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9214:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9237:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9243:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9233:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9233:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9207:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9207:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9207:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9263:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9397:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9271:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9271:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9263:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9141:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9156:4:8",
                "type": ""
              }
            ],
            "src": "8990:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9586:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9596:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9608:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9619:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9604:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9604:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9596:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9643:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9654:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9639:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9639:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9662:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9668:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9658:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9658:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9632:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9632:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9632:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9688:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9822:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9696:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9696:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9688:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9566:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9581:4:8",
                "type": ""
              }
            ],
            "src": "9415:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9938:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9948:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9960:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9971:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9956:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9948:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10028:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10041:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10052:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10037:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10037:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9984:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9984:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9984:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9910:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9922:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9933:4:8",
                "type": ""
              }
            ],
            "src": "9840:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10108:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10118:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10134:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10128:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10128:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "10118:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10101:6:8",
                "type": ""
              }
            ],
            "src": "10068:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10245:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10262:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10267:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10255:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10255:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10255:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10283:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10302:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10307:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10298:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10298:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10283:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10217:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10222:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10233:11:8",
                "type": ""
              }
            ],
            "src": "10149:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10368:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10378:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10401:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10383:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10383:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10378:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10412:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10435:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10417:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10417:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10412:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10575:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10577:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10577:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10577:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10496:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10503:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10571:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10499:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10499:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10493:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10493:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10490:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10607:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10618:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10621:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10614:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10614:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10607:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10355:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10358:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10364:3:8",
                "type": ""
              }
            ],
            "src": "10324:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10677:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10687:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10710:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10692:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10692:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10687:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10721:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10744:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10726:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10726:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10721:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10768:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10770:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10770:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10770:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10765:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10758:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10758:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10755:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10800:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10809:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10812:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10805:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10805:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10800:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10666:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10669:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10675:1:8",
                "type": ""
              }
            ],
            "src": "10635:185:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10874:300:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10884:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10907:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10889:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10889:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10884:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10918:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10941:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10923:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10923:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10918:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11116:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11118:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11118:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11118:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11028:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11021:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11021:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11014:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11014:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11036:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11043:66:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11111:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11039:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11039:74:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11033:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11033:81:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11010:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11010:105:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11007:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11148:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11163:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11166:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11159:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11159:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11148:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10857:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10860:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10866:7:8",
                "type": ""
              }
            ],
            "src": "10826:348:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11225:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11235:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11258:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11240:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11240:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11235:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11269:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11292:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11274:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11274:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11269:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11316:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11318:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11318:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11318:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11310:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11313:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11307:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11307:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11304:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11348:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11360:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11363:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11356:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11356:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11348:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11211:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11214:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11220:4:8",
                "type": ""
              }
            ],
            "src": "11180:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11422:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11432:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11461:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11443:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11443:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11432:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11404:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11414:7:8",
                "type": ""
              }
            ],
            "src": "11377:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11532:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11542:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11571:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11553:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11553:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11542:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11514:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11524:7:8",
                "type": ""
              }
            ],
            "src": "11479:104:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11631:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11641:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11666:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11659:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11659:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11652:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11652:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11641:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11613:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11623:7:8",
                "type": ""
              }
            ],
            "src": "11589:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11730:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11740:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11755:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11762:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11751:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11751:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11740:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11712:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11722:7:8",
                "type": ""
              }
            ],
            "src": "11685:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11862:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11872:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11883:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11872:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11844:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11854:7:8",
                "type": ""
              }
            ],
            "src": "11817:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11968:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11978:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12022:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11991:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11991:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11978:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11948:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11958:9:8",
                "type": ""
              }
            ],
            "src": "11900:134:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12100:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12110:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12154:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12123:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12123:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12110:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12080:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12090:9:8",
                "type": ""
              }
            ],
            "src": "12040:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12232:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12242:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12273:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12255:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12255:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12242:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12212:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12222:9:8",
                "type": ""
              }
            ],
            "src": "12172:113:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12319:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12336:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12339:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12329:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12329:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12329:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12433:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12436:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12426:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12426:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12426:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12457:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12460:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12450:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12450:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12450:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12291:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12505:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12522:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12525:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12515:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12515:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12515:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12619:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12622:4:8",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12612:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12612:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12612:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12643:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12646:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12636:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12636:15:8"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12477:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12752:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12769:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12772:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12762:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12762:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12762:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "12663:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12875:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12892:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12895:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12885:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12885:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12885:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "12786:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13015:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13037:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13045:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13033:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13033:14:8"
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c6965722c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13049:34:8",
                        "type": "",
                        "value": "No investment has done earlier, "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13026:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13026:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13026:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13105:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13113:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13101:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13101:15:8"
                      },
                      {
                        "hexValue": "5374616b696e67206973206e6f74207065726d6974746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13118:26:8",
                        "type": "",
                        "value": "Staking is not permitted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13094:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13094:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13094:51:8"
                }
              ]
            },
            "name": "store_literal_in_memory_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13007:6:8",
                "type": ""
              }
            ],
            "src": "12909:243:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13264:126:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13286:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13294:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13282:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13282:14:8"
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f742062652072656c6561736564206265666f7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13298:34:8",
                        "type": "",
                        "value": "Funds can not be released before"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13275:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13275:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13275:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13354:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13362:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13350:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13350:15:8"
                      },
                      {
                        "hexValue": "206c6f636b2d696e2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13367:15:8",
                        "type": "",
                        "value": " lock-in time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13343:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13343:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13343:40:8"
                }
              ]
            },
            "name": "store_literal_in_memory_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13256:6:8",
                "type": ""
              }
            ],
            "src": "13158:232:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13502:75:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13524:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13532:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13520:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13520:14:8"
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f74206265206c657373207468616e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13536:33:8",
                        "type": "",
                        "value": "Funds can not be less than zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13513:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13513:57:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13513:57:8"
                }
              ]
            },
            "name": "store_literal_in_memory_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13494:6:8",
                "type": ""
              }
            ],
            "src": "13396:181:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13689:76:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13711:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13719:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13707:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13707:14:8"
                      },
                      {
                        "hexValue": "4c6f636b2d696e20706572696f6420686173206e6f7420656e64656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13723:34:8",
                        "type": "",
                        "value": "Lock-in period has not ended yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13700:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13700:58:8"
                }
              ]
            },
            "name": "store_literal_in_memory_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13681:6:8",
                "type": ""
              }
            ],
            "src": "13583:182:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13877:114:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13899:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13907:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13895:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13895:14:8"
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f206265207769746864726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13911:34:8",
                        "type": "",
                        "value": "There is no ether to be withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13888:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13888:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13888:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13967:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13975:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13963:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13963:15:8"
                      },
                      {
                        "hexValue": "6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13980:3:8",
                        "type": "",
                        "value": "n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13956:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13956:28:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13956:28:8"
                }
              ]
            },
            "name": "store_literal_in_memory_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13869:6:8",
                "type": ""
              }
            ],
            "src": "13771:220:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14103:74:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14125:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14133:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14121:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14121:14:8"
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c696572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14137:32:8",
                        "type": "",
                        "value": "No investment has done earlier"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14114:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14114:56:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14114:56:8"
                }
              ]
            },
            "name": "store_literal_in_memory_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14095:6:8",
                "type": ""
              }
            ],
            "src": "13997:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14289:74:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14311:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14319:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14307:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14307:14:8"
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f206265207374616b6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14323:32:8",
                        "type": "",
                        "value": "There is no ether to be staked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14300:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14300:56:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14300:56:8"
                }
              ]
            },
            "name": "store_literal_in_memory_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14281:6:8",
                "type": ""
              }
            ],
            "src": "14183:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14412:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14469:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14478:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14481:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14471:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14471:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14471:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14435:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14460:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14442:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14442:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14432:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14432:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14425:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14425:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14422:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14405:5:8",
                "type": ""
              }
            ],
            "src": "14369:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14548:87:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14613:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14622:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14625:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14615:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14615:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14615:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14571:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14604:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "14578:25:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14578:32:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14568:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14568:43:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14561:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14561:51:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14558:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14541:5:8",
                "type": ""
              }
            ],
            "src": "14497:138:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14681:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14735:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14744:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14747:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14737:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14737:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14737:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14704:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14726:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14711:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14711:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14701:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14701:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14694:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14694:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14691:2:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14674:5:8",
                "type": ""
              }
            ],
            "src": "14641:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14806:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14863:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14872:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14875:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14865:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14865:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14865:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14829:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14854:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "14836:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14836:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14826:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14826:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14819:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14819:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14816:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14799:5:8",
                "type": ""
              }
            ],
            "src": "14763:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79(memPtr) {\n\n        mstore(add(memPtr, 0), \"No investment has done earlier, \")\n\n        mstore(add(memPtr, 32), \"Staking is not permitted\")\n\n    }\n\n    function store_literal_in_memory_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Funds can not be released before\")\n\n        mstore(add(memPtr, 32), \" lock-in time\")\n\n    }\n\n    function store_literal_in_memory_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Funds can not be less than zero\")\n\n    }\n\n    function store_literal_in_memory_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Lock-in period has not ended yet\")\n\n    }\n\n    function store_literal_in_memory_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no ether to be withdraw\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function store_literal_in_memory_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"No investment has done earlier\")\n\n    }\n\n    function store_literal_in_memory_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no ether to be staked\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "266:4454:7:-:0;;;945:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1008:10;996:9;;:22;;;;;;;;;;;;;;;;;;1037:10;1029:5;;:18;;;;;;;;;;;;;;;;;;945:110;266:4454;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;639:51;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;741:81;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:2;;1186:1;1183;1176:12;1127:2;1117:79;:::o;266:4454:7:-;;;;;;;",
  "deployedSourceMap": "266:4454:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4115:602;;;;;;;;;;;;;:::i;:::-;;1380:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;384:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;690:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3345:762;;;;;;;;;;;;;:::i;:::-;;1063:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;474:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;506:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1514:485;;;:::i;:::-;;748:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1218:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4115:602;4196:12;:24;4209:10;4196:24;;;;;;;;;;;;;;;:36;;;4179:15;:53;;4171:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4322:1;4288:12;:24;4301:10;4288:24;;;;;;;;;;;;;;;:33;;;:35;4280:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4403:1;4377:13;:25;4391:10;4377:25;;;;;;;;;;;;;;;;:27;4369:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;4478:16;;;;;;;;;;;:25;;:60;4504:12;:24;4517:10;4504:24;;;;;;;;;;;;;;;:33;;;4478:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:9;;;;;;;;;;;4551:26;;;4578:12;;;;;;;;;;;4592:13;:25;4606:10;4592:25;;;;;;;;;;;;;;;;4551:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4667:1;4631:12;:24;4644:10;4631:24;;;;;;;;;;;;;;;:33;;:37;;;;4707:1;4679:13;:25;4693:10;4679:25;;;;;;;;;;;;;;;:29;;;;4115:602::o;1380:126::-;1457:5;;;;;;;;;;1445:17;;:10;:17;;;1437:26;;;;;;1487:11;1474:10;:24;;;;1380:126;:::o;384:39::-;;;;;;;;;;;;;:::o;690:48::-;;;;;;;;;;;;;;;;;:::o;430:35::-;;;;;;;;;;;;;:::o;357:20::-;;;;;;;;;;;;:::o;3345:762::-;3420:12;:24;3433:10;3420:24;;;;;;;;;;;;;;;:36;;;3403:15;:53;;3395:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3559:1;3525:12;:24;3538:10;3525:24;;;;;;;;;;;;;;;:33;;;:35;3517:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3643:1;3617:13;:25;3631:10;3617:25;;;;;;;;;;;;;;;;:27;3609:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3692:24;3727:10;3692:46;;3749:8;:17;;:52;3767:12;:24;3780:10;3767:24;;;;;;;;;;;;;;;:33;;;3749:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:1;3814:12;:24;3827:10;3814:24;;;;;;;;;;;;;;;:33;;:37;;;;3902:1;3863:12;:24;3876:10;3863:24;;;;;;;;;;;;;;;:36;;:40;;;;3915:18;3936:13;:25;3950:10;3936:25;;;;;;;;;;;;;;;;3915:46;;3979:9;;;;;;;;;;;3972:22;;;4003:4;4010:10;3972:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4058:41;4088:10;4058:13;:25;4072:10;4058:25;;;;;;;;;;;;;;;;:29;;:41;;;;:::i;:::-;4032:13;:25;4046:10;4032:25;;;;;;;;;;;;;;;:67;;;;3382:725;;3345:762::o;1063:147::-;1157:5;;;;;;;;;;1145:17;;:10;:17;;;1137:26;;;;;;1189:13;1174:12;;:28;;;;;;;;;;;;;;;;;;1063:147;:::o;474:24::-;;;;;;;;;;;;;:::o;506:25::-;;;;:::o;1514:485::-;1561:14;1578:9;1561:26;;1598:19;1620:10;1598:32;;1658:1;1651:6;:8;1643:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:23;1731;1750:3;1731:14;1742:2;1731:6;:10;;:14;;;;:::i;:::-;:18;;:23;;;;:::i;:::-;1705:49;;1767:46;1784:15;1801:11;1767:16;:46::i;:::-;1885:23;1911:27;1922:15;1911:6;:10;;:27;;;;:::i;:::-;1885:53;;1949:16;;;;;;;;;;;:25;;:42;1975:15;1949:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:449;;;;1514:485::o;748:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1218:154::-;1312:5;;;;;;;;;;1300:17;;:10;:17;;;1292:26;;;;;;1347:17;1329:16;;:35;;;;;;;;;;;;;;;;;;1218:154;:::o;3108:96:5:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2007:653:7:-;2146:55;2185:15;2146:12;:25;2159:11;2146:25;;;;;;;;;;;;;;;:34;;;:38;;:55;;;;:::i;:::-;2109:12;:25;2122:11;2109:25;;;;;;;;;;;;;;;:34;;:92;;;;2255:11;2215:12;:25;2228:11;2215:25;;;;;;;;;;;;;;;:37;;;:51;;;;;;;;;;;;;;;;;;2320:15;2279:12;:25;2292:11;2279:25;;;;;;;;;;;;;;;:38;;:56;;;;2427:10;2386:12;:25;2399:11;2386:25;;;;;;;;;;;;;;;:38;;;:51;;;;:::i;:::-;2346:12;:25;2359:11;2346:25;;;;;;;;;;;;;;;:37;;:91;;;;2457:19;2479:29;2492:15;2479:12;:29::i;:::-;2457:51;;2528:9;;;;;;;;;;;2521:22;;;2552:4;2559:11;2521:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:42;2640:11;2610:13;:25;2624:10;2610:25;;;;;;;;;;;;;;;;:29;;:42;;;;:::i;:::-;2584:13;:25;2598:10;2584:25;;;;;;;;;;;;;;;:68;;;;2088:572;2007:653;;:::o;2741:96:5:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;2759:534:7:-;2819:7;2840:22;2865:47;2892:19;2865:22;2876:10;;2865:6;:10;;:22;;;;:::i;:::-;:26;;:47;;;;:::i;:::-;2840:72;;2924:19;2964:7;2957:6;:14;:33;;;;;2983:7;2975:6;:15;2957:33;2954:300;;;3020:31;3047:3;3020:22;3039:2;3020:14;:18;;:22;;;;:::i;:::-;:26;;:31;;;;:::i;:::-;3006:45;;3082:11;3066:27;;;;;:::i;:::-;;;2954:300;;;3131:7;3124:6;:14;3121:133;;;3168:31;3195:3;3168:22;3187:2;3168:14;:18;;:22;;;;:::i;:::-;:26;;:31;;;;:::i;:::-;3154:45;;3230:11;3214:27;;;;;:::i;:::-;;;3121:133;2954:300;3271:14;3264:21;;;;2759:534;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;373:77;;;;:::o;456:139::-;502:5;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;508:87;;;;:::o;601:329::-;660:6;709:2;697:9;688:7;684:23;680:32;677:2;;;715:79;;:::i;:::-;677:2;835:1;860:53;905:7;896:6;885:9;881:22;860:53;:::i;:::-;850:63;;806:117;667:263;;;;:::o;936:345::-;1003:6;1052:2;1040:9;1031:7;1027:23;1023:32;1020:2;;;1058:79;;:::i;:::-;1020:2;1178:1;1203:61;1256:7;1247:6;1236:9;1232:22;1203:61;:::i;:::-;1193:71;;1149:125;1010:271;;;;:::o;1287:345::-;1354:6;1403:2;1391:9;1382:7;1378:23;1374:32;1371:2;;;1409:79;;:::i;:::-;1371:2;1529:1;1554:61;1607:7;1598:6;1587:9;1583:22;1554:61;:::i;:::-;1544:71;;1500:125;1361:271;;;;:::o;1638:329::-;1697:6;1746:2;1734:9;1725:7;1721:23;1717:32;1714:2;;;1752:79;;:::i;:::-;1714:2;1872:1;1897:53;1942:7;1933:6;1922:9;1918:22;1897:53;:::i;:::-;1887:63;;1843:117;1704:263;;;;:::o;1973:147::-;2068:45;2107:5;2068:45;:::i;:::-;2063:3;2056:58;2046:74;;:::o;2126:142::-;2229:32;2255:5;2229:32;:::i;:::-;2224:3;2217:45;2207:61;;:::o;2274:118::-;2361:24;2379:5;2361:24;:::i;:::-;2356:3;2349:37;2339:53;;:::o;2398:366::-;2540:3;2561:67;2625:2;2620:3;2561:67;:::i;:::-;2554:74;;2637:93;2726:3;2637:93;:::i;:::-;2755:2;2750:3;2746:12;2739:19;;2544:220;;;:::o;2770:366::-;2912:3;2933:67;2997:2;2992:3;2933:67;:::i;:::-;2926:74;;3009:93;3098:3;3009:93;:::i;:::-;3127:2;3122:3;3118:12;3111:19;;2916:220;;;:::o;3142:366::-;3284:3;3305:67;3369:2;3364:3;3305:67;:::i;:::-;3298:74;;3381:93;3470:3;3381:93;:::i;:::-;3499:2;3494:3;3490:12;3483:19;;3288:220;;;:::o;3514:366::-;3656:3;3677:67;3741:2;3736:3;3677:67;:::i;:::-;3670:74;;3753:93;3842:3;3753:93;:::i;:::-;3871:2;3866:3;3862:12;3855:19;;3660:220;;;:::o;3886:366::-;4028:3;4049:67;4113:2;4108:3;4049:67;:::i;:::-;4042:74;;4125:93;4214:3;4125:93;:::i;:::-;4243:2;4238:3;4234:12;4227:19;;4032:220;;;:::o;4258:366::-;4400:3;4421:67;4485:2;4480:3;4421:67;:::i;:::-;4414:74;;4497:93;4586:3;4497:93;:::i;:::-;4615:2;4610:3;4606:12;4599:19;;4404:220;;;:::o;4630:366::-;4772:3;4793:67;4857:2;4852:3;4793:67;:::i;:::-;4786:74;;4869:93;4958:3;4869:93;:::i;:::-;4987:2;4982:3;4978:12;4971:19;;4776:220;;;:::o;5002:118::-;5089:24;5107:5;5089:24;:::i;:::-;5084:3;5077:37;5067:53;;:::o;5126:222::-;5219:4;5257:2;5246:9;5242:18;5234:26;;5270:71;5338:1;5327:9;5323:17;5314:6;5270:71;:::i;:::-;5224:124;;;;:::o;5354:254::-;5463:4;5501:2;5490:9;5486:18;5478:26;;5514:87;5598:1;5587:9;5583:17;5574:6;5514:87;:::i;:::-;5468:140;;;;:::o;5614:348::-;5743:4;5781:2;5770:9;5766:18;5758:26;;5794:79;5870:1;5859:9;5855:17;5846:6;5794:79;:::i;:::-;5883:72;5951:2;5940:9;5936:18;5927:6;5883:72;:::i;:::-;5748:214;;;;;:::o;5968:332::-;6089:4;6127:2;6116:9;6112:18;6104:26;;6140:71;6208:1;6197:9;6193:17;6184:6;6140:71;:::i;:::-;6221:72;6289:2;6278:9;6274:18;6265:6;6221:72;:::i;:::-;6094:206;;;;;:::o;6306:553::-;6483:4;6521:3;6510:9;6506:19;6498:27;;6535:71;6603:1;6592:9;6588:17;6579:6;6535:71;:::i;:::-;6616:72;6684:2;6673:9;6669:18;6660:6;6616:72;:::i;:::-;6698;6766:2;6755:9;6751:18;6742:6;6698:72;:::i;:::-;6780;6848:2;6837:9;6833:18;6824:6;6780:72;:::i;:::-;6488:371;;;;;;;:::o;6865:419::-;7031:4;7069:2;7058:9;7054:18;7046:26;;7118:9;7112:4;7108:20;7104:1;7093:9;7089:17;7082:47;7146:131;7272:4;7146:131;:::i;:::-;7138:139;;7036:248;;;:::o;7290:419::-;7456:4;7494:2;7483:9;7479:18;7471:26;;7543:9;7537:4;7533:20;7529:1;7518:9;7514:17;7507:47;7571:131;7697:4;7571:131;:::i;:::-;7563:139;;7461:248;;;:::o;7715:419::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7968:9;7962:4;7958:20;7954:1;7943:9;7939:17;7932:47;7996:131;8122:4;7996:131;:::i;:::-;7988:139;;7886:248;;;:::o;8140:419::-;8306:4;8344:2;8333:9;8329:18;8321:26;;8393:9;8387:4;8383:20;8379:1;8368:9;8364:17;8357:47;8421:131;8547:4;8421:131;:::i;:::-;8413:139;;8311:248;;;:::o;8565:419::-;8731:4;8769:2;8758:9;8754:18;8746:26;;8818:9;8812:4;8808:20;8804:1;8793:9;8789:17;8782:47;8846:131;8972:4;8846:131;:::i;:::-;8838:139;;8736:248;;;:::o;8990:419::-;9156:4;9194:2;9183:9;9179:18;9171:26;;9243:9;9237:4;9233:20;9229:1;9218:9;9214:17;9207:47;9271:131;9397:4;9271:131;:::i;:::-;9263:139;;9161:248;;;:::o;9415:419::-;9581:4;9619:2;9608:9;9604:18;9596:26;;9668:9;9662:4;9658:20;9654:1;9643:9;9639:17;9632:47;9696:131;9822:4;9696:131;:::i;:::-;9688:139;;9586:248;;;:::o;9840:222::-;9933:4;9971:2;9960:9;9956:18;9948:26;;9984:71;10052:1;10041:9;10037:17;10028:6;9984:71;:::i;:::-;9938:124;;;;:::o;10149:169::-;10233:11;10267:6;10262:3;10255:19;10307:4;10302:3;10298:14;10283:29;;10245:73;;;;:::o;10324:305::-;10364:3;10383:20;10401:1;10383:20;:::i;:::-;10378:25;;10417:20;10435:1;10417:20;:::i;:::-;10412:25;;10571:1;10503:66;10499:74;10496:1;10493:81;10490:2;;;10577:18;;:::i;:::-;10490:2;10621:1;10618;10614:9;10607:16;;10368:261;;;;:::o;10635:185::-;10675:1;10692:20;10710:1;10692:20;:::i;:::-;10687:25;;10726:20;10744:1;10726:20;:::i;:::-;10721:25;;10765:1;10755:2;;10770:18;;:::i;:::-;10755:2;10812:1;10809;10805:9;10800:14;;10677:143;;;;:::o;10826:348::-;10866:7;10889:20;10907:1;10889:20;:::i;:::-;10884:25;;10923:20;10941:1;10923:20;:::i;:::-;10918:25;;11111:1;11043:66;11039:74;11036:1;11033:81;11028:1;11021:9;11014:17;11010:105;11007:2;;;11118:18;;:::i;:::-;11007:2;11166:1;11163;11159:9;11148:20;;10874:300;;;;:::o;11180:191::-;11220:4;11240:20;11258:1;11240:20;:::i;:::-;11235:25;;11274:20;11292:1;11274:20;:::i;:::-;11269:25;;11313:1;11310;11307:8;11304:2;;;11318:18;;:::i;:::-;11304:2;11363:1;11360;11356:9;11348:17;;11225:146;;;;:::o;11377:96::-;11414:7;11443:24;11461:5;11443:24;:::i;:::-;11432:35;;11422:51;;;:::o;11479:104::-;11524:7;11553:24;11571:5;11553:24;:::i;:::-;11542:35;;11532:51;;;:::o;11589:90::-;11623:7;11666:5;11659:13;11652:21;11641:32;;11631:48;;;:::o;11685:126::-;11722:7;11762:42;11755:5;11751:54;11740:65;;11730:81;;;:::o;11817:77::-;11854:7;11883:5;11872:16;;11862:32;;;:::o;11900:134::-;11958:9;11991:37;12022:5;11991:37;:::i;:::-;11978:50;;11968:66;;;:::o;12040:126::-;12090:9;12123:37;12154:5;12123:37;:::i;:::-;12110:50;;12100:66;;;:::o;12172:113::-;12222:9;12255:24;12273:5;12255:24;:::i;:::-;12242:37;;12232:53;;;:::o;12291:180::-;12339:77;12336:1;12329:88;12436:4;12433:1;12426:15;12460:4;12457:1;12450:15;12477:180;12525:77;12522:1;12515:88;12622:4;12619:1;12612:15;12646:4;12643:1;12636:15;12786:117;12895:1;12892;12885:12;12909:243;13049:34;13045:1;13037:6;13033:14;13026:58;13118:26;13113:2;13105:6;13101:15;13094:51;13015:137;:::o;13158:232::-;13298:34;13294:1;13286:6;13282:14;13275:58;13367:15;13362:2;13354:6;13350:15;13343:40;13264:126;:::o;13396:181::-;13536:33;13532:1;13524:6;13520:14;13513:57;13502:75;:::o;13583:182::-;13723:34;13719:1;13711:6;13707:14;13700:58;13689:76;:::o;13771:220::-;13911:34;13907:1;13899:6;13895:14;13888:58;13980:3;13975:2;13967:6;13963:15;13956:28;13877:114;:::o;13997:180::-;14137:32;14133:1;14125:6;14121:14;14114:56;14103:74;:::o;14183:180::-;14323:32;14319:1;14311:6;14307:14;14300:56;14289:74;:::o;14369:122::-;14442:24;14460:5;14442:24;:::i;:::-;14435:5;14432:35;14422:2;;14481:1;14478;14471:12;14422:2;14412:79;:::o;14497:138::-;14578:32;14604:5;14578:32;:::i;:::-;14571:5;14568:43;14558:2;;14625:1;14622;14615:12;14558:2;14548:87;:::o;14641:116::-;14711:21;14726:5;14711:21;:::i;:::-;14704:5;14701:32;14691:2;;14747:1;14744;14737:12;14691:2;14681:76;:::o;14763:122::-;14836:24;14854:5;14836:24;:::i;:::-;14829:5;14826:35;14816:2;;14875:1;14872;14865:12;14816:2;14806:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"./IToken.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MindApp {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IToken; \r\n    address public owner;\r\n    address payable public liquidityAddress;\r\n    address payable public stakeAddress;  \r\n    address public mindToken; \r\n    uint256 public tokenprice; \r\n\r\n    struct Investor{\r\n        address depositedby;\r\n        uint256 balances;\r\n        uint256 deposited_at;\r\n        uint256 releasetime;\r\n    }\r\n\r\n    mapping(address => uint256) public tokenbalances; \r\n\r\n    mapping(address => Investor) public investorinfo;\r\n\r\n    // event LogDeposit(address sender, uint amount, uint releaseTime);   \r\n    // event LogcancelInvest(address receiver, uint amount);\r\n\r\n    constructor(address _mindToken) {        \r\n        mindToken = _mindToken;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setstakeAddress(address payable _stakeAddress) public {\r\n        require(msg.sender==owner);\r\n        stakeAddress = _stakeAddress;\r\n    }\r\n\r\n    function setliquidity(address payable _liquidityAddress) public{\r\n        require(msg.sender==owner);\r\n        liquidityAddress= _liquidityAddress;\r\n    }\r\n\r\n    function settokencost(uint _tokenprice) public{\r\n        require(msg.sender==owner);\r\n        tokenprice = _tokenprice;\r\n    }\r\n\r\n    function deposit() external payable {\r\n        uint256 amount = msg.value;\r\n        address depositedby = msg.sender;\r\n\r\n        require(amount>0,\"Funds can not be less than zero\");\r\n        uint256 investingamount = amount.mul(90).div(100);\r\n\r\n        _depositInternal(investingamount, depositedby);\r\n\r\n         //10% amount to be sent to the liquiditycontract\r\n        uint256 onetenth_amount = amount.sub(investingamount);\r\n        liquidityAddress.transfer(onetenth_amount);\r\n    }\r\n\r\n    function _depositInternal(uint256 investingamount, address depositedby) internal {\r\n        \r\n        investorinfo[depositedby].balances = investorinfo[depositedby].balances.add(investingamount); \r\n\r\n        investorinfo[depositedby].depositedby = depositedby;  \r\n        investorinfo[depositedby].deposited_at = block.timestamp;\r\n        investorinfo[depositedby].releasetime = investorinfo[depositedby].deposited_at + 15 minutes;       \r\n\r\n        uint256 numOfTokens = mintedtokens(investingamount);\r\n\r\n        IToken(mindToken).mint(address(this), numOfTokens);\r\n\r\n        tokenbalances[msg.sender]=tokenbalances[msg.sender].add(numOfTokens);\r\n    }\r\n\r\n    // Function for finding number of tokens that need to minted after depositing Ether\r\n\r\n    function mintedtokens(uint256 amount) internal view returns(uint256){\r\n\r\n        uint256 numberoftokens = amount.mul(tokenprice).div(1000000000000000000); \r\n        uint256 bonustokens;\r\n        if(amount>1 ether && amount< 5 ether){\r\n            bonustokens = numberoftokens.mul(10).div(100);\r\n            numberoftokens+=bonustokens; \r\n        }\r\n        else if(amount>5 ether){\r\n            bonustokens = numberoftokens.mul(20).div(100);\r\n            numberoftokens+=bonustokens; \r\n        }\r\n        return numberoftokens;\r\n    }\r\n\r\n    //Function for cancelling investment\r\n\r\n    function cancelInvestment() external {\r\n\r\n        require(block.timestamp>=investorinfo[msg.sender].releasetime, \"Funds can not be released before lock-in time\");\r\n        require(investorinfo[msg.sender].balances>0, \"There is no ether to be withdrawn\");\r\n        require(tokenbalances[msg.sender]>0, \"No investment has done earlier\");\r\n\r\n        address payable receiver = payable(msg.sender);\r\n        receiver.transfer(investorinfo[msg.sender].balances);\r\n\r\n        investorinfo[msg.sender].balances = 0; \r\n        investorinfo[msg.sender].releasetime = 0; \r\n        uint256 mtkBalance = tokenbalances[msg.sender];\r\n        IToken(mindToken).burn(address(this), mtkBalance);\r\n        tokenbalances[msg.sender]=tokenbalances[msg.sender].sub(mtkBalance);\r\n    }\r\n\r\n    function stakeInvestment() external{\r\n        \r\n        require(block.timestamp>=investorinfo[msg.sender].releasetime, \"Lock-in period has not ended yet\");\r\n        require(investorinfo[msg.sender].balances>0, \"There is no ether to be staked\");\r\n        require(tokenbalances[msg.sender]>0, \"No investment has done earlier, Staking is not permitted\");\r\n\r\n        liquidityAddress.transfer(investorinfo[msg.sender].balances);\r\n\r\n        IToken(mindToken).transfer(stakeAddress, tokenbalances[msg.sender]);\r\n\r\n        investorinfo[msg.sender].balances = 0;\r\n        tokenbalances[msg.sender] = 0; \r\n    }\r\n}",
  "sourcePath": "/newfolder/MindPay/contracts/Investment.sol",
  "ast": {
    "absolutePath": "project:/contracts/Investment.sol",
    "exportedSymbols": {
      "Address": [
        703
      ],
      "Context": [
        725
      ],
      "IERC20": [
        182
      ],
      "IToken": [
        1099
      ],
      "MindApp": [
        1574
      ],
      "Ownable": [
        104
      ],
      "SafeERC20": [
        406
      ],
      "SafeMath": [
        1037
      ]
    },
    "id": 1575,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1101,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "project:/contracts/IToken.sol",
        "file": "./IToken.sol",
        "id": 1102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1100,
        "src": "60:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1103,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 407,
        "src": "84:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1038,
        "src": "151:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1105,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 105,
        "src": "210:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1574,
        "linearizedBaseContracts": [
          1574
        ],
        "name": "MindApp",
        "nameLocation": "275:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1108,
            "libraryName": {
              "id": 1106,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1037,
              "src": "296:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "290:27:7",
            "typeName": {
              "id": 1107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1112,
            "libraryName": {
              "id": 1109,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 406,
              "src": "329:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "323:27:7",
            "typeName": {
              "id": 1111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1110,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1099,
                "src": "343:6:7"
              },
              "referencedDeclaration": 1099,
              "src": "343:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$1099",
                "typeString": "contract IToken"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1114,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "372:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "357:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3221c93f",
            "id": 1116,
            "mutability": "mutable",
            "name": "liquidityAddress",
            "nameLocation": "407:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "384:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1115,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "384:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85107367",
            "id": 1118,
            "mutability": "mutable",
            "name": "stakeAddress",
            "nameLocation": "453:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "430:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1117,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "430:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d01cc48b",
            "id": 1120,
            "mutability": "mutable",
            "name": "mindToken",
            "nameLocation": "489:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "474:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1119,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "474:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0bd4c73",
            "id": 1122,
            "mutability": "mutable",
            "name": "tokenprice",
            "nameLocation": "521:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "506:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1121,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MindApp.Investor",
            "id": 1131,
            "members": [
              {
                "constant": false,
                "id": 1124,
                "mutability": "mutable",
                "name": "depositedby",
                "nameLocation": "575:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "567:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1123,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1126,
                "mutability": "mutable",
                "name": "balances",
                "nameLocation": "605:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "597:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "597:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1128,
                "mutability": "mutable",
                "name": "deposited_at",
                "nameLocation": "632:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "624:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1127,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "624:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1130,
                "mutability": "mutable",
                "name": "releasetime",
                "nameLocation": "663:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "655:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1129,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "655:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "548:8:7",
            "nodeType": "StructDefinition",
            "scope": 1574,
            "src": "541:141:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6bb9e887",
            "id": 1135,
            "mutability": "mutable",
            "name": "tokenbalances",
            "nameLocation": "725:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "690:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1134,
              "keyType": {
                "id": 1132,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "698:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "690:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1133,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8674688",
            "id": 1140,
            "mutability": "mutable",
            "name": "investorinfo",
            "nameLocation": "784:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "748:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
              "typeString": "mapping(address => struct MindApp.Investor)"
            },
            "typeName": {
              "id": 1139,
              "keyType": {
                "id": 1136,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "756:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "748:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                "typeString": "mapping(address => struct MindApp.Investor)"
              },
              "valueType": {
                "id": 1138,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1137,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1131,
                  "src": "767:8:7"
                },
                "referencedDeclaration": 1131,
                "src": "767:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$1131_storage_ptr",
                  "typeString": "struct MindApp.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "977:78:7",
              "statements": [
                {
                  "expression": {
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1145,
                      "name": "mindToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "996:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1146,
                      "name": "_mindToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "1008:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "996:22:7"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1149,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "1029:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1037:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1037:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1029:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:18:7"
                }
              ]
            },
            "id": 1155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_mindToken",
                  "nameLocation": "965:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "957:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:20:7"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:7"
            },
            "scope": 1574,
            "src": "945:110:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "1126:84:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1145:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1163,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1157:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1145:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1137:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:26:7"
                },
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "stakeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "1174:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1168,
                      "name": "_stakeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "1189:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1174:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:28:7"
                }
              ]
            },
            "functionSelector": "bdfecc78",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setstakeAddress",
            "nameLocation": "1072:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "mutability": "mutable",
                  "name": "_stakeAddress",
                  "nameLocation": "1104:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1088:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1087:31:7"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:0:7"
            },
            "scope": 1574,
            "src": "1063:147:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1281:91:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1178,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1300:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1300:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1180,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1312:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1300:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1292:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:26:7"
                },
                {
                  "expression": {
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1184,
                      "name": "liquidityAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "1329:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1185,
                      "name": "_liquidityAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "1347:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1329:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:35:7"
                }
              ]
            },
            "functionSelector": "f71af22b",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setliquidity",
            "nameLocation": "1227:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "_liquidityAddress",
                  "nameLocation": "1256:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1240:33:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:35:7"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:7"
            },
            "scope": 1574,
            "src": "1218:154:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1426:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1445:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1445:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1197,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1457:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1445:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1437:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:26:7"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1201,
                      "name": "tokenprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "1474:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1202,
                      "name": "_tokenprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1487:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1474:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:24:7"
                }
              ]
            },
            "functionSelector": "28739c1e",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settokencost",
            "nameLocation": "1389:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "_tokenprice",
                  "nameLocation": "1407:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1402:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:18:7"
            },
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:7"
            },
            "scope": 1574,
            "src": "1380:126:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "1550:449:7",
              "statements": [
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1569:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1561:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1561:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1213,
                  "initialValue": {
                    "expression": {
                      "id": 1211,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1578:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1578:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1561:26:7"
                },
                {
                  "assignments": [
                    1215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1215,
                      "mutability": "mutable",
                      "name": "depositedby",
                      "nameLocation": "1606:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1598:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1214,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1598:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": {
                    "expression": {
                      "id": 1216,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1620:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1620:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1220,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "1651:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1658:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1651:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f74206265206c657373207468616e207a65726f",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
                          "typeString": "literal_string \"Funds can not be less than zero\""
                        },
                        "value": "Funds can not be less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
                          "typeString": "literal_string \"Funds can not be less than zero\""
                        }
                      ],
                      "id": 1219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:51:7"
                },
                {
                  "assignments": [
                    1227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "investingamount",
                      "nameLocation": "1713:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1705:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3930",
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1742:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            },
                            "value": "90"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            }
                          ],
                          "expression": {
                            "id": 1228,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "1731:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 931,
                          "src": "1731:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1731:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 946,
                      "src": "1731:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1705:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1237,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "1784:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1238,
                        "name": "depositedby",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "1801:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1236,
                      "name": "_depositInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1333,
                      "src": "1767:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:46:7"
                },
                {
                  "assignments": [
                    1242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "onetenth_amount",
                      "nameLocation": "1893:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1885:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1885:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1247,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "1922:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "1911:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 916,
                      "src": "1911:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1885:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1251,
                        "name": "onetenth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "1975:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1248,
                        "name": "liquidityAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "1949:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1949:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:42:7"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 1255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1523:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1530:2:7"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:7"
            },
            "scope": 1574,
            "src": "1514:485:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "2088:572:7",
              "statements": [
                {
                  "expression": {
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1262,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2109:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1264,
                        "indexExpression": {
                          "id": 1263,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2122:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2109:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "2109:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1271,
                          "name": "investingamount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1257,
                          "src": "2185:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1266,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "2146:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1268,
                            "indexExpression": {
                              "id": 1267,
                              "name": "depositedby",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "2159:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2146:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "2146:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "2146:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2146:55:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2109:92:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:92:7"
                },
                {
                  "expression": {
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1275,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2215:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1277,
                        "indexExpression": {
                          "id": 1276,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2228:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2215:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedby",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1124,
                      "src": "2215:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1279,
                      "name": "depositedby",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "2255:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2215:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:51:7"
                },
                {
                  "expression": {
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1282,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2279:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1284,
                        "indexExpression": {
                          "id": 1283,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2292:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2279:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deposited_at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "2279:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1286,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2320:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2320:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2279:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:56:7"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1290,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2346:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1292,
                        "indexExpression": {
                          "id": 1291,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2359:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releasetime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "2346:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1294,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "2386:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "id": 1295,
                            "name": "depositedby",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1259,
                            "src": "2399:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2386:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposited_at",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1128,
                        "src": "2386:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3135",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2427:10:7",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        "value": "15"
                      },
                      "src": "2386:51:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2346:91:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:91:7"
                },
                {
                  "assignments": [
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "numOfTokens",
                      "nameLocation": "2465:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "2457:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1305,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "2492:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1304,
                      "name": "mintedtokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "2479:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2552:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2544:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2544:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2544:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1316,
                        "name": "numOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "2559:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1309,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "2528:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1308,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "2521:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1062,
                      "src": "2521:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2521:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1318,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:50:7"
                },
                {
                  "expression": {
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1319,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "2584:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1322,
                      "indexExpression": {
                        "expression": {
                          "id": 1320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2584:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1328,
                          "name": "numOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1303,
                          "src": "2640:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "2610:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1326,
                          "indexExpression": {
                            "expression": {
                              "id": 1324,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2624:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2624:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2610:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "2610:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2610:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2584:68:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:68:7"
                }
              ]
            },
            "id": 1333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositInternal",
            "nameLocation": "2016:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "investingamount",
                  "nameLocation": "2041:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1333,
                  "src": "2033:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "depositedby",
                  "nameLocation": "2066:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1333,
                  "src": "2058:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:46:7"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2088:0:7"
            },
            "scope": 1574,
            "src": "2007:653:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "2827:466:7",
              "statements": [
                {
                  "assignments": [
                    1341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1341,
                      "mutability": "mutable",
                      "name": "numberoftokens",
                      "nameLocation": "2848:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "2840:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2840:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1349,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2892:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1344,
                            "name": "tokenprice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "2876:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1342,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "2865:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 931,
                          "src": "2865:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2865:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 946,
                      "src": "2865:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2840:72:7"
                },
                {
                  "assignments": [
                    1351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1351,
                      "mutability": "mutable",
                      "name": "bonustokens",
                      "nameLocation": "2932:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "2924:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2924:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1352,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2924:19:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1353,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "2957:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2964:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "2957:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1356,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "2975:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2983:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "2975:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2957:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1375,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "3124:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3131:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "3124:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1393,
                    "nodeType": "IfStatement",
                    "src": "3121:133:7",
                    "trueBody": {
                      "id": 1392,
                      "nodeType": "Block",
                      "src": "3139:115:7",
                      "statements": [
                        {
                          "expression": {
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1378,
                              "name": "bonustokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "3154:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 1384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3195:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "3230",
                                      "id": 1381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3187:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1379,
                                      "name": "numberoftokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1341,
                                      "src": "3168:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 931,
                                    "src": "3168:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3168:22:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 946,
                                "src": "3168:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3168:31:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3154:45:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1387,
                          "nodeType": "ExpressionStatement",
                          "src": "3154:45:7"
                        },
                        {
                          "expression": {
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1388,
                              "name": "numberoftokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "3214:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 1389,
                              "name": "bonustokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "3230:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3214:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1391,
                          "nodeType": "ExpressionStatement",
                          "src": "3214:27:7"
                        }
                      ]
                    }
                  },
                  "id": 1394,
                  "nodeType": "IfStatement",
                  "src": "2954:300:7",
                  "trueBody": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "2991:115:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1360,
                            "name": "bonustokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "3006:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "313030",
                                "id": 1366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3047:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "3130",
                                    "id": 1363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3039:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1361,
                                    "name": "numberoftokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1341,
                                    "src": "3020:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 931,
                                  "src": "3020:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3020:22:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 946,
                              "src": "3020:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3020:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3006:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "3006:45:7"
                      },
                      {
                        "expression": {
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1370,
                            "name": "numberoftokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "3066:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1371,
                            "name": "bonustokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "3082:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3066:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "3066:27:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1395,
                    "name": "numberoftokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1341,
                    "src": "3271:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1339,
                  "id": 1396,
                  "nodeType": "Return",
                  "src": "3264:21:7"
                }
              ]
            },
            "id": 1398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedtokens",
            "nameLocation": "2768:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1335,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2789:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "2781:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:16:7"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "2819:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:9:7"
            },
            "scope": 1574,
            "src": "2759:534:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "3382:725:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1402,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3403:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3403:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1404,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3420:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1407,
                            "indexExpression": {
                              "expression": {
                                "id": 1405,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3433:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3433:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3420:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releasetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1130,
                          "src": "3420:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3403:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f742062652072656c6561736564206265666f7265206c6f636b2d696e2074696d65",
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3458:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
                          "typeString": "literal_string \"Funds can not be released before lock-in time\""
                        },
                        "value": "Funds can not be released before lock-in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
                          "typeString": "literal_string \"Funds can not be released before lock-in time\""
                        }
                      ],
                      "id": 1401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3395:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1414,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3525:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1417,
                            "indexExpression": {
                              "expression": {
                                "id": 1415,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3538:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3538:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3525:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "3525:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3559:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3525:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f2062652077697468647261776e",
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
                          "typeString": "literal_string \"There is no ether to be withdrawn\""
                        },
                        "value": "There is no ether to be withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
                          "typeString": "literal_string \"There is no ether to be withdrawn\""
                        }
                      ],
                      "id": 1413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3517:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3517:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "3517:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1425,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "3617:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "expression": {
                              "id": 1426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3631:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3631:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3617:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3643:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3617:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c696572",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3646:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
                          "typeString": "literal_string \"No investment has done earlier\""
                        },
                        "value": "No investment has done earlier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
                          "typeString": "literal_string \"No investment has done earlier\""
                        }
                      ],
                      "id": 1424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3609:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1433,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:70:7"
                },
                {
                  "assignments": [
                    1435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1435,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "3708:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1499,
                      "src": "3692:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3692:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1441,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3727:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3727:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3719:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3719:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3692:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1445,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "3767:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1448,
                          "indexExpression": {
                            "expression": {
                              "id": 1446,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3780:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3767:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1126,
                        "src": "3767:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1442,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "3749:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3749:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:52:7"
                },
                {
                  "expression": {
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1452,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3814:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1455,
                        "indexExpression": {
                          "expression": {
                            "id": 1453,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3827:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3827:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3814:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "3814:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3850:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3814:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "3814:37:7"
                },
                {
                  "expression": {
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1460,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3863:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1463,
                        "indexExpression": {
                          "expression": {
                            "id": 1461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3876:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3876:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3863:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releasetime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "3863:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3902:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3863:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:40:7"
                },
                {
                  "assignments": [
                    1469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1469,
                      "mutability": "mutable",
                      "name": "mtkBalance",
                      "nameLocation": "3923:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1499,
                      "src": "3915:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3915:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1474,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1470,
                      "name": "tokenbalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "3936:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1473,
                    "indexExpression": {
                      "expression": {
                        "id": 1471,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3950:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3950:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3936:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3915:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1481,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4003:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          ],
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3995:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1479,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3995:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3995:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1483,
                        "name": "mtkBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "4010:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1476,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "3979:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1475,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "3972:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3972:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1069,
                      "src": "3972:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:49:7"
                },
                {
                  "expression": {
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "4032:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "expression": {
                          "id": 1487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4046:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4046:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4032:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1495,
                          "name": "mtkBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1469,
                          "src": "4088:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1490,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "4058:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1493,
                          "indexExpression": {
                            "expression": {
                              "id": 1491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4072:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4072:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4058:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "4058:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4058:41:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4032:67:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:67:7"
                }
              ]
            },
            "functionSelector": "94f8e954",
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelInvestment",
            "nameLocation": "3354:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:2:7"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3382:0:7"
            },
            "scope": 1574,
            "src": "3345:762:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "4150:567:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4179:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4179:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1506,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "4196:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1509,
                            "indexExpression": {
                              "expression": {
                                "id": 1507,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4209:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4209:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4196:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releasetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1130,
                          "src": "4196:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4179:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2d696e20706572696f6420686173206e6f7420656e64656420796574",
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4234:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
                          "typeString": "literal_string \"Lock-in period has not ended yet\""
                        },
                        "value": "Lock-in period has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
                          "typeString": "literal_string \"Lock-in period has not ended yet\""
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4171:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4171:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1514,
                  "nodeType": "ExpressionStatement",
                  "src": "4171:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1516,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "4288:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1519,
                            "indexExpression": {
                              "expression": {
                                "id": 1517,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4301:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4301:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4288:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "4288:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4322:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4288:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f206265207374616b6564",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
                          "typeString": "literal_string \"There is no ether to be staked\""
                        },
                        "value": "There is no ether to be staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
                          "typeString": "literal_string \"There is no ether to be staked\""
                        }
                      ],
                      "id": 1515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4280:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:78:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1527,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "4377:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1530,
                          "indexExpression": {
                            "expression": {
                              "id": 1528,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4391:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4391:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4377:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4403:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4377:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c6965722c205374616b696e67206973206e6f74207065726d6974746564",
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4406:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
                          "typeString": "literal_string \"No investment has done earlier, Staking is not permitted\""
                        },
                        "value": "No investment has done earlier, Staking is not permitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
                          "typeString": "literal_string \"No investment has done earlier, Staking is not permitted\""
                        }
                      ],
                      "id": 1526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4369:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:96:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1539,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "4504:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1542,
                          "indexExpression": {
                            "expression": {
                              "id": 1540,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4517:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4517:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4504:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1126,
                        "src": "4504:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1536,
                        "name": "liquidityAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "4478:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4478:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1545,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1550,
                        "name": "stakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "4578:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1551,
                          "name": "tokenbalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1135,
                          "src": "4592:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1554,
                        "indexExpression": {
                          "expression": {
                            "id": 1552,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4606:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4606:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4592:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1547,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "4558:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1546,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "4551:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4551:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1087,
                      "src": "4551:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4551:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:67:7"
                },
                {
                  "expression": {
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1557,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "4631:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1560,
                        "indexExpression": {
                          "expression": {
                            "id": 1558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4644:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4644:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4631:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "4631:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4667:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4631:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "4631:37:7"
                },
                {
                  "expression": {
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1565,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "4679:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1568,
                      "indexExpression": {
                        "expression": {
                          "id": 1566,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4693:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4693:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4679:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4707:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4679:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:29:7"
                }
              ]
            },
            "functionSelector": "0ab1e603",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeInvestment",
            "nameLocation": "4124:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4139:2:7"
            },
            "returnParameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4150:0:7"
            },
            "scope": 1574,
            "src": "4115:602:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1575,
        "src": "266:4454:7",
        "usedErrors": []
      }
    ],
    "src": "33:4687:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Investment.sol",
    "exportedSymbols": {
      "Address": [
        703
      ],
      "Context": [
        725
      ],
      "IERC20": [
        182
      ],
      "IToken": [
        1099
      ],
      "MindApp": [
        1574
      ],
      "Ownable": [
        104
      ],
      "SafeERC20": [
        406
      ],
      "SafeMath": [
        1037
      ]
    },
    "id": 1575,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1101,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "project:/contracts/IToken.sol",
        "file": "./IToken.sol",
        "id": 1102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1100,
        "src": "60:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1103,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 407,
        "src": "84:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1038,
        "src": "151:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1105,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 105,
        "src": "210:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1574,
        "linearizedBaseContracts": [
          1574
        ],
        "name": "MindApp",
        "nameLocation": "275:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1108,
            "libraryName": {
              "id": 1106,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1037,
              "src": "296:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "290:27:7",
            "typeName": {
              "id": 1107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1112,
            "libraryName": {
              "id": 1109,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 406,
              "src": "329:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "323:27:7",
            "typeName": {
              "id": 1111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1110,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1099,
                "src": "343:6:7"
              },
              "referencedDeclaration": 1099,
              "src": "343:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$1099",
                "typeString": "contract IToken"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1114,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "372:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "357:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3221c93f",
            "id": 1116,
            "mutability": "mutable",
            "name": "liquidityAddress",
            "nameLocation": "407:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "384:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1115,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "384:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85107367",
            "id": 1118,
            "mutability": "mutable",
            "name": "stakeAddress",
            "nameLocation": "453:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "430:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1117,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "430:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d01cc48b",
            "id": 1120,
            "mutability": "mutable",
            "name": "mindToken",
            "nameLocation": "489:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "474:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1119,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "474:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0bd4c73",
            "id": 1122,
            "mutability": "mutable",
            "name": "tokenprice",
            "nameLocation": "521:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "506:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1121,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MindApp.Investor",
            "id": 1131,
            "members": [
              {
                "constant": false,
                "id": 1124,
                "mutability": "mutable",
                "name": "depositedby",
                "nameLocation": "575:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "567:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1123,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1126,
                "mutability": "mutable",
                "name": "balances",
                "nameLocation": "605:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "597:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "597:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1128,
                "mutability": "mutable",
                "name": "deposited_at",
                "nameLocation": "632:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "624:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1127,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "624:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1130,
                "mutability": "mutable",
                "name": "releasetime",
                "nameLocation": "663:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1131,
                "src": "655:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1129,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "655:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "548:8:7",
            "nodeType": "StructDefinition",
            "scope": 1574,
            "src": "541:141:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6bb9e887",
            "id": 1135,
            "mutability": "mutable",
            "name": "tokenbalances",
            "nameLocation": "725:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "690:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1134,
              "keyType": {
                "id": 1132,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "698:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "690:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1133,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8674688",
            "id": 1140,
            "mutability": "mutable",
            "name": "investorinfo",
            "nameLocation": "784:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1574,
            "src": "748:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
              "typeString": "mapping(address => struct MindApp.Investor)"
            },
            "typeName": {
              "id": 1139,
              "keyType": {
                "id": 1136,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "756:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "748:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                "typeString": "mapping(address => struct MindApp.Investor)"
              },
              "valueType": {
                "id": 1138,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1137,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1131,
                  "src": "767:8:7"
                },
                "referencedDeclaration": 1131,
                "src": "767:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$1131_storage_ptr",
                  "typeString": "struct MindApp.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "977:78:7",
              "statements": [
                {
                  "expression": {
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1145,
                      "name": "mindToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "996:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1146,
                      "name": "_mindToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "1008:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "996:22:7"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1149,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "1029:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1037:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1037:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1029:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:18:7"
                }
              ]
            },
            "id": 1155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_mindToken",
                  "nameLocation": "965:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "957:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:20:7"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:7"
            },
            "scope": 1574,
            "src": "945:110:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "1126:84:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1145:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1163,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1157:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1145:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1137:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:26:7"
                },
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "stakeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "1174:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1168,
                      "name": "_stakeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "1189:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1174:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:28:7"
                }
              ]
            },
            "functionSelector": "bdfecc78",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setstakeAddress",
            "nameLocation": "1072:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "mutability": "mutable",
                  "name": "_stakeAddress",
                  "nameLocation": "1104:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1088:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1087:31:7"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:0:7"
            },
            "scope": 1574,
            "src": "1063:147:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1281:91:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1178,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1300:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1300:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1180,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1312:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1300:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1292:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1292:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:26:7"
                },
                {
                  "expression": {
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1184,
                      "name": "liquidityAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "1329:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1185,
                      "name": "_liquidityAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "1347:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1329:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:35:7"
                }
              ]
            },
            "functionSelector": "f71af22b",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setliquidity",
            "nameLocation": "1227:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "_liquidityAddress",
                  "nameLocation": "1256:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1240:33:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:35:7"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:7"
            },
            "scope": 1574,
            "src": "1218:154:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1426:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1445:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1445:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1197,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "1457:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1445:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1437:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:26:7"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1201,
                      "name": "tokenprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "1474:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1202,
                      "name": "_tokenprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "1487:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1474:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:24:7"
                }
              ]
            },
            "functionSelector": "28739c1e",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settokencost",
            "nameLocation": "1389:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "_tokenprice",
                  "nameLocation": "1407:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1402:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:18:7"
            },
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:7"
            },
            "scope": 1574,
            "src": "1380:126:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "1550:449:7",
              "statements": [
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1569:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1561:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1561:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1213,
                  "initialValue": {
                    "expression": {
                      "id": 1211,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1578:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1578:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1561:26:7"
                },
                {
                  "assignments": [
                    1215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1215,
                      "mutability": "mutable",
                      "name": "depositedby",
                      "nameLocation": "1606:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1598:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1214,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1598:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": {
                    "expression": {
                      "id": 1216,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1620:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1620:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1220,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "1651:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1658:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1651:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f74206265206c657373207468616e207a65726f",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
                          "typeString": "literal_string \"Funds can not be less than zero\""
                        },
                        "value": "Funds can not be less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84514a33d56564a6d858ff2f884b5b2811cae2901c876ac572cebe8268ab791f",
                          "typeString": "literal_string \"Funds can not be less than zero\""
                        }
                      ],
                      "id": 1219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:51:7"
                },
                {
                  "assignments": [
                    1227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "investingamount",
                      "nameLocation": "1713:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1705:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "3930",
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1742:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            },
                            "value": "90"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            }
                          ],
                          "expression": {
                            "id": 1228,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "1731:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 931,
                          "src": "1731:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1731:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 946,
                      "src": "1731:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1705:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1237,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "1784:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1238,
                        "name": "depositedby",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "1801:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1236,
                      "name": "_depositInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1333,
                      "src": "1767:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:46:7"
                },
                {
                  "assignments": [
                    1242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "onetenth_amount",
                      "nameLocation": "1893:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1254,
                      "src": "1885:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1885:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1247,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "1922:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "1911:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 916,
                      "src": "1911:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1885:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1251,
                        "name": "onetenth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "1975:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1248,
                        "name": "liquidityAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "1949:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1949:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:42:7"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 1255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1523:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1530:2:7"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:7"
            },
            "scope": 1574,
            "src": "1514:485:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "2088:572:7",
              "statements": [
                {
                  "expression": {
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1262,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2109:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1264,
                        "indexExpression": {
                          "id": 1263,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2122:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2109:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "2109:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1271,
                          "name": "investingamount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1257,
                          "src": "2185:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1266,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "2146:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1268,
                            "indexExpression": {
                              "id": 1267,
                              "name": "depositedby",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "2159:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2146:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "2146:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "2146:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2146:55:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2109:92:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:92:7"
                },
                {
                  "expression": {
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1275,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2215:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1277,
                        "indexExpression": {
                          "id": 1276,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2228:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2215:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedby",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1124,
                      "src": "2215:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1279,
                      "name": "depositedby",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "2255:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2215:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:51:7"
                },
                {
                  "expression": {
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1282,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2279:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1284,
                        "indexExpression": {
                          "id": 1283,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2292:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2279:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deposited_at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "2279:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1286,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2320:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2320:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2279:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:56:7"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1290,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "2346:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1292,
                        "indexExpression": {
                          "id": 1291,
                          "name": "depositedby",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "2359:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releasetime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "2346:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1294,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "2386:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "id": 1295,
                            "name": "depositedby",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1259,
                            "src": "2399:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2386:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposited_at",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1128,
                        "src": "2386:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3135",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2427:10:7",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_900_by_1",
                          "typeString": "int_const 900"
                        },
                        "value": "15"
                      },
                      "src": "2386:51:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2346:91:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:91:7"
                },
                {
                  "assignments": [
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "numOfTokens",
                      "nameLocation": "2465:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "2457:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1305,
                        "name": "investingamount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "2492:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1304,
                      "name": "mintedtokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "2479:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2552:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2544:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2544:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2544:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1316,
                        "name": "numOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "2559:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1309,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "2528:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1308,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "2521:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1062,
                      "src": "2521:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2521:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1318,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:50:7"
                },
                {
                  "expression": {
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1319,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "2584:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1322,
                      "indexExpression": {
                        "expression": {
                          "id": 1320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2598:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2598:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2584:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1328,
                          "name": "numOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1303,
                          "src": "2640:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "2610:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1326,
                          "indexExpression": {
                            "expression": {
                              "id": 1324,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2624:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2624:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2610:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "2610:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2610:42:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2584:68:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:68:7"
                }
              ]
            },
            "id": 1333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositInternal",
            "nameLocation": "2016:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "investingamount",
                  "nameLocation": "2041:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1333,
                  "src": "2033:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "depositedby",
                  "nameLocation": "2066:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1333,
                  "src": "2058:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:46:7"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2088:0:7"
            },
            "scope": 1574,
            "src": "2007:653:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "2827:466:7",
              "statements": [
                {
                  "assignments": [
                    1341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1341,
                      "mutability": "mutable",
                      "name": "numberoftokens",
                      "nameLocation": "2848:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "2840:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2840:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1349,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2892:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1344,
                            "name": "tokenprice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "2876:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1342,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "2865:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 931,
                          "src": "2865:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2865:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 946,
                      "src": "2865:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2840:72:7"
                },
                {
                  "assignments": [
                    1351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1351,
                      "mutability": "mutable",
                      "name": "bonustokens",
                      "nameLocation": "2932:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "2924:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2924:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1352,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2924:19:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1353,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "2957:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2964:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "2957:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1356,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "2975:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2983:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "2975:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2957:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1375,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "3124:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3131:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "3124:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1393,
                    "nodeType": "IfStatement",
                    "src": "3121:133:7",
                    "trueBody": {
                      "id": 1392,
                      "nodeType": "Block",
                      "src": "3139:115:7",
                      "statements": [
                        {
                          "expression": {
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1378,
                              "name": "bonustokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "3154:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 1384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3195:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "3230",
                                      "id": 1381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3187:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1379,
                                      "name": "numberoftokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1341,
                                      "src": "3168:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 931,
                                    "src": "3168:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3168:22:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 946,
                                "src": "3168:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3168:31:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3154:45:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1387,
                          "nodeType": "ExpressionStatement",
                          "src": "3154:45:7"
                        },
                        {
                          "expression": {
                            "id": 1390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1388,
                              "name": "numberoftokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "3214:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 1389,
                              "name": "bonustokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "3230:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3214:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1391,
                          "nodeType": "ExpressionStatement",
                          "src": "3214:27:7"
                        }
                      ]
                    }
                  },
                  "id": 1394,
                  "nodeType": "IfStatement",
                  "src": "2954:300:7",
                  "trueBody": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "2991:115:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1360,
                            "name": "bonustokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "3006:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "313030",
                                "id": 1366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3047:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "3130",
                                    "id": 1363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3039:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1361,
                                    "name": "numberoftokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1341,
                                    "src": "3020:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 931,
                                  "src": "3020:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3020:22:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 946,
                              "src": "3020:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3020:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3006:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "3006:45:7"
                      },
                      {
                        "expression": {
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1370,
                            "name": "numberoftokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "3066:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1371,
                            "name": "bonustokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "3082:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3066:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "3066:27:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1395,
                    "name": "numberoftokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1341,
                    "src": "3271:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1339,
                  "id": 1396,
                  "nodeType": "Return",
                  "src": "3264:21:7"
                }
              ]
            },
            "id": 1398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedtokens",
            "nameLocation": "2768:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1335,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2789:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "2781:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:16:7"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "2819:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:9:7"
            },
            "scope": 1574,
            "src": "2759:534:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "3382:725:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1402,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3403:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3403:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1404,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3420:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1407,
                            "indexExpression": {
                              "expression": {
                                "id": 1405,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3433:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3433:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3420:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releasetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1130,
                          "src": "3420:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3403:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64732063616e206e6f742062652072656c6561736564206265666f7265206c6f636b2d696e2074696d65",
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3458:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
                          "typeString": "literal_string \"Funds can not be released before lock-in time\""
                        },
                        "value": "Funds can not be released before lock-in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6035a60f9102bcd9f4a8f5c9fb185c87aa501714447069dda5d87d5eebf92e3b",
                          "typeString": "literal_string \"Funds can not be released before lock-in time\""
                        }
                      ],
                      "id": 1401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3395:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "3395:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1414,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3525:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1417,
                            "indexExpression": {
                              "expression": {
                                "id": 1415,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3538:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3538:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3525:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "3525:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3559:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3525:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f2062652077697468647261776e",
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
                          "typeString": "literal_string \"There is no ether to be withdrawn\""
                        },
                        "value": "There is no ether to be withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cec32482f1ced3fa13d063d07c8f6b406dcbb99539504dc486ca9995efd3a30",
                          "typeString": "literal_string \"There is no ether to be withdrawn\""
                        }
                      ],
                      "id": 1413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3517:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3517:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "3517:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1425,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "3617:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "expression": {
                              "id": 1426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3631:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3631:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3617:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3643:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3617:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c696572",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3646:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
                          "typeString": "literal_string \"No investment has done earlier\""
                        },
                        "value": "No investment has done earlier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c4993d1b075d017b1f2543965e2c82886676a1882cd281b1f4f84ea7efc4e5",
                          "typeString": "literal_string \"No investment has done earlier\""
                        }
                      ],
                      "id": 1424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3609:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1433,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:70:7"
                },
                {
                  "assignments": [
                    1435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1435,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "3708:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1499,
                      "src": "3692:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3692:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1441,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3727:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3727:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3719:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3719:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3692:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1445,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "3767:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1448,
                          "indexExpression": {
                            "expression": {
                              "id": 1446,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3780:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3780:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3767:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1126,
                        "src": "3767:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1442,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "3749:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3749:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:52:7"
                },
                {
                  "expression": {
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1452,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3814:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1455,
                        "indexExpression": {
                          "expression": {
                            "id": 1453,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3827:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3827:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3814:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "3814:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3850:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3814:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "3814:37:7"
                },
                {
                  "expression": {
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1460,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3863:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1463,
                        "indexExpression": {
                          "expression": {
                            "id": 1461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3876:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3876:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3863:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releasetime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "3863:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3902:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3863:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:40:7"
                },
                {
                  "assignments": [
                    1469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1469,
                      "mutability": "mutable",
                      "name": "mtkBalance",
                      "nameLocation": "3923:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1499,
                      "src": "3915:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3915:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1474,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1470,
                      "name": "tokenbalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "3936:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1473,
                    "indexExpression": {
                      "expression": {
                        "id": 1471,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3950:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3950:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3936:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3915:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1481,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4003:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MindApp_$1574",
                              "typeString": "contract MindApp"
                            }
                          ],
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3995:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1479,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3995:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3995:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1483,
                        "name": "mtkBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "4010:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1476,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "3979:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1475,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "3972:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3972:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1069,
                      "src": "3972:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:49:7"
                },
                {
                  "expression": {
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "4032:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "expression": {
                          "id": 1487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4046:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4046:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4032:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1495,
                          "name": "mtkBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1469,
                          "src": "4088:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1490,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "4058:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1493,
                          "indexExpression": {
                            "expression": {
                              "id": 1491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4072:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4072:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4058:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "4058:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4058:41:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4032:67:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:67:7"
                }
              ]
            },
            "functionSelector": "94f8e954",
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelInvestment",
            "nameLocation": "3354:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:2:7"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3382:0:7"
            },
            "scope": 1574,
            "src": "3345:762:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "4150:567:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4179:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4179:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1506,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "4196:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1509,
                            "indexExpression": {
                              "expression": {
                                "id": 1507,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4209:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4209:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4196:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releasetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1130,
                          "src": "4196:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4179:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2d696e20706572696f6420686173206e6f7420656e64656420796574",
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4234:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
                          "typeString": "literal_string \"Lock-in period has not ended yet\""
                        },
                        "value": "Lock-in period has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_874f5cd116637fd33fcfd3ed89f504833212de84df8f98ff890cca87e797abaf",
                          "typeString": "literal_string \"Lock-in period has not ended yet\""
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4171:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4171:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1514,
                  "nodeType": "ExpressionStatement",
                  "src": "4171:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1516,
                              "name": "investorinfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "4288:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                                "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                              }
                            },
                            "id": 1519,
                            "indexExpression": {
                              "expression": {
                                "id": 1517,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4301:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4301:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4288:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$1131_storage",
                              "typeString": "struct MindApp.Investor storage ref"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1126,
                          "src": "4288:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4322:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4288:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20657468657220746f206265207374616b6564",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
                          "typeString": "literal_string \"There is no ether to be staked\""
                        },
                        "value": "There is no ether to be staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2f8551f8d9d83830859b21540d7ee965ce651045841b280d16677489c93fb3b",
                          "typeString": "literal_string \"There is no ether to be staked\""
                        }
                      ],
                      "id": 1515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4280:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:78:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1527,
                            "name": "tokenbalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "4377:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1530,
                          "indexExpression": {
                            "expression": {
                              "id": 1528,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4391:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4391:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4377:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4403:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4377:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696e766573746d656e742068617320646f6e65206561726c6965722c205374616b696e67206973206e6f74207065726d6974746564",
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4406:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
                          "typeString": "literal_string \"No investment has done earlier, Staking is not permitted\""
                        },
                        "value": "No investment has done earlier, Staking is not permitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c7e3a0d87c29c1f570e55dabb240bc9a54e6df62c462218b4a874cc65496a79",
                          "typeString": "literal_string \"No investment has done earlier, Staking is not permitted\""
                        }
                      ],
                      "id": 1526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4369:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:96:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1539,
                            "name": "investorinfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "4504:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                              "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                            }
                          },
                          "id": 1542,
                          "indexExpression": {
                            "expression": {
                              "id": 1540,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4517:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4517:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4504:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$1131_storage",
                            "typeString": "struct MindApp.Investor storage ref"
                          }
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1126,
                        "src": "4504:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1536,
                        "name": "liquidityAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "4478:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4478:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1545,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1550,
                        "name": "stakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "4578:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1551,
                          "name": "tokenbalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1135,
                          "src": "4592:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1554,
                        "indexExpression": {
                          "expression": {
                            "id": 1552,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4606:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4606:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4592:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1547,
                            "name": "mindToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "4558:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1546,
                          "name": "IToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1099,
                          "src": "4551:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IToken_$1099_$",
                            "typeString": "type(contract IToken)"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4551:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$1099",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 1549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1087,
                      "src": "4551:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4551:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:67:7"
                },
                {
                  "expression": {
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1557,
                          "name": "investorinfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "4631:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$1131_storage_$",
                            "typeString": "mapping(address => struct MindApp.Investor storage ref)"
                          }
                        },
                        "id": 1560,
                        "indexExpression": {
                          "expression": {
                            "id": 1558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4644:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4644:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4631:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$1131_storage",
                          "typeString": "struct MindApp.Investor storage ref"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1126,
                      "src": "4631:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4667:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4631:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "4631:37:7"
                },
                {
                  "expression": {
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1565,
                        "name": "tokenbalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "4679:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1568,
                      "indexExpression": {
                        "expression": {
                          "id": 1566,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4693:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4693:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4679:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4707:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4679:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:29:7"
                }
              ]
            },
            "functionSelector": "0ab1e603",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeInvestment",
            "nameLocation": "4124:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4139:2:7"
            },
            "returnParameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4150:0:7"
            },
            "scope": 1574,
            "src": "4115:602:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1575,
        "src": "266:4454:7",
        "usedErrors": []
      }
    ],
    "src": "33:4687:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-02T15:06:53.877Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}